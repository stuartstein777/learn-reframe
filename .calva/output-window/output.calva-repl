; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
2
cljs꞉exfn.app꞉>  ; Use `alt+enter` to evaluate
2
cljs꞉exfn.app꞉> 
({:id :coeffects, :before #object[re_frame$cofx$coeffects_before], :after nil} {:id :do-fx, :before nil, :after #object[re_frame$fx$do_fx_after]} {:id :inject-global-interceptors, :before #object[re_frame$std_interceptors$inject_global_interceptors_before], :after nil} {:id :db-handler, :before #object[re_frame$std_interceptors$db_handler__GT_interceptor_$_db_handler_before], :after nil})
cljs꞉exfn.app꞉> 
2
cljs꞉exfn.app꞉> 
nil
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:1
 Use of undeclared Var exfn.app/people
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Bob", :id 2} {:name "Alice", :id 3}]
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:15
 Use of undeclared Var exfn.app/id
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:6
 Use of undeclared Var exfn.app/people
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Bob", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Bob")
cljs꞉exfn.app꞉> 
("Bob" "Stuart")
cljs꞉exfn.app꞉> 
"Bob"
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Bob", :id 2} {:name "Alice", :id 3}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Bob", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Bob")
cljs꞉exfn.app꞉> 
("Bob" "Stuart")
cljs꞉exfn.app꞉> 
"Bob"
cljs꞉exfn.app꞉> 
1
cljs꞉exfn.app꞉> 
2
cljs꞉exfn.app꞉> 
2
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Bob", :id 2} {:name "ALice", :id 3} {:name "EVe", :id 4}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Bob", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Bob")
cljs꞉exfn.app꞉> 
#object[cljs$core$sort]
cljs꞉exfn.app꞉> 
("Bob" "Stuart")
cljs꞉exfn.app꞉> 
"Bob"
cljs꞉exfn.app꞉> 
"Bob"
cljs꞉exfn.app꞉> 
15
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Alice")
cljs꞉exfn.app꞉> 
("Alice" "Stuart")
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:6
 Use of undeclared Var exfn.app/people
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
"Alice"
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Alice")
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (0) passed to cljs.core/first
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
("Alice" "Stuart")
cljs꞉exfn.app꞉> 
"Alice"
cljs꞉exfn.app꞉> 
("Alice" "Stuart")
cljs꞉exfn.app꞉> 
("Stuart" "Alice")
cljs꞉exfn.app꞉> 
("Alice" "Stuart")
cljs꞉exfn.app꞉> 
"Alice"
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:11:9
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:11:9
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:11:9
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:1:1
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:1
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
"ALICE"
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:1:2
 No such namespace: string, could not locate string.cljs, string.cljc, or JavaScript source providing "string"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var string/upper-case
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
("Stuart" "Alice")
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2})
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2})
cljs꞉exfn.app꞉> 
("Stuart" "Alice")
cljs꞉exfn.app꞉> 
"Stuart"
cljs꞉exfn.app꞉> 
#object[cljs$core$sort]
cljs꞉exfn.app꞉> 
"Alice"
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:11:9
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var exfn.app/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var clojure.string/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:11:9
 Use of undeclared Var clojure.string/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
"Alice"
cljs꞉exfn.app꞉> 
"ALICE"
cljs꞉exfn.app꞉> 
("ALICE" "STUART")
cljs꞉exfn.app꞉> 
11
cljs꞉exfn.app꞉> 
2.2
cljs꞉exfn.app꞉> 
55
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:34
 Can't take value of macro cljs.core/time
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:42
 Can't take value of macro cljs.core/time
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:34
 Can't take value of macro cljs.core/time
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
"05"
cljs꞉exfn.app꞉> 
"05"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
"05"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "ALice" "Bob")
cljs꞉exfn.app꞉> 
("ALice" "Bob" "Stuart")
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:10:13
 Use of undeclared Var clojure.string/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (0) passed to cljs.core/sort
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "ALice" "Bob")
cljs꞉exfn.app꞉> 
nil
; 
; Execution error (TypeError) at (<cljs repl>:1).
s.toUpperCase is not a function
cljs꞉exfn.app꞉> 
nil
; 
; Execution error (TypeError) at (<cljs repl>:1).
s.toUpperCase is not a function
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "ALice" "Bob")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB")
cljs꞉exfn.app꞉> 
"05"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
"00"
cljs꞉exfn.app꞉> 
"05"
cljs꞉exfn.app꞉> 
2
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3} {:name "EVe", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "ALice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "ALice" "Bob")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB")
cljs꞉exfn.app꞉> 
nil
; 
; Execution error (Error) at (<cljs repl>:1).
Cannot compare {:name "ALice", :id 2} to {:name "Stuart", :id 1}
cljs꞉exfn.app꞉> 
({:name "ALice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
({:name "ALice", :id 2} {:name "Bob", :id 3} {:name "Stuart", :id 1})
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:9:25
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:9:25
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:9:36
 No such namespace: str, could not locate str.cljs, str.cljc, or JavaScript source providing "str"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:9:36
 Use of undeclared Var str/toUpper
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
({:name #object[clojure$string$upper_case], :id 2} {:name #object[clojure$string$upper_case], :id 3} {:name #object[clojure$string$upper_case], :id 1})
cljs꞉exfn.app꞉> 
({:name "ALice", :id 2} {:name "Bob", :id 3} {:name "Stuart", :id 1})
cljs꞉exfn.app꞉> 
{:name #object[clojure$string$upper_case], :id 5}
cljs꞉exfn.app꞉> 
({:name "ALICE", :id 2} {:name "BOB", :id 3} {:name "STUART", :id 1})
cljs꞉exfn.app꞉> 
({:name "ALICE", :id 2} {:name "BOB", :id 3} {:name "STUART", :id 1})
cljs꞉exfn.app꞉> 
({:name "STUART", :id 1} {:name "ALICE", :id 2} {:name "BOB", :id 3})
cljs꞉exfn.app꞉> 
({:name "STUART", :id 1} {:name "ALICE", :id 2})
cljs꞉exfn.app꞉> 
nil
; 
; Execution error (Error) at (<cljs repl>:1).
Argument must be an integer: :id
cljs꞉exfn.app꞉> 
({:name "STUART", :id 1} {:name "BOB", :id 3})
cljs꞉exfn.app꞉> 
({:name "STUART", :id 1} {:name "BOB", :id 3} {:name "LUCY", :id 5})
cljs꞉exfn.app꞉> 
1
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "Alice" "Bob")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
("ALICE" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "STUART")
cljs꞉exfn.app꞉> 
10
cljs꞉exfn.app꞉> 
2
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "Alice" "Bob")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "Alice" "Bob")
cljs꞉exfn.app꞉> 
("Stuart" "Alice" "Bob")
cljs꞉exfn.app꞉> 
("STUART" "ALICE" "BOB")
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
(2 4 4 6 8)
cljs꞉exfn.app꞉> 
(2 4 4 6 8)
cljs꞉exfn.app꞉> 
(2 4 4 6 8)
cljs꞉exfn.app꞉> 
(2 4 4 6 8)
cljs꞉exfn.app꞉> 
5
cljs꞉exfn.app꞉> 
5
cljs꞉exfn.app꞉> 
5
cljs꞉exfn.app꞉> 
false
cljs꞉exfn.app꞉> 
true
cljs꞉exfn.app꞉> 
4
cljs꞉exfn.app꞉> 
("STUART" "ALICE")
cljs꞉exfn.app꞉> 
(0 1 2 3 4 5 6 7 8 9 10)
cljs꞉exfn.app꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:17
 Use of undeclared Var exfn.app/$
--------------------------------------------------------------------------------

cljs꞉exfn.app꞉> 
(0 3 6 9 12 15 18 21 24 27 30)
cljs꞉exfn.app꞉> 
(0 6 12 18 24 30)
cljs꞉exfn.app꞉> 
90
cljs꞉exfn.app꞉> 
115
cljs꞉exfn.app꞉> 
[{:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3} {:name "Eve", :id 4} {:name "Lucy", :id 5}]
cljs꞉exfn.app꞉> 
({:name "Stuart", :id 1} {:name "Alice", :id 2} {:name "Bob", :id 3})
cljs꞉exfn.app꞉> 
("Stuart" "Alice" "Bob")
cljs꞉exfn.app꞉> 
("Alice" "Bob" "Stuart")
cljs꞉exfn.app꞉> 
("ALICE" "BOB" "STUART")
cljs꞉exfn.app꞉> 
("ALICE" "BOB")
cljs꞉exfn.app꞉> 
